<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OSRSHelpers</name>
    </assembly>
    <members>
        <member name="T:OSRSHelpers.GodlikeClient">
            <summary>
            This class is used to connect to the Godlike server.
            </summary>
        </member>
        <member name="P:OSRSHelpers.GodlikeClient.WebSocketClient">
            <summary>
            WebSocket client.
            </summary>
        </member>
        <member name="P:OSRSHelpers.GodlikeClient.Subscribers">
            <summary>
            Data subscribers.
            </summary>
        </member>
        <member name="P:OSRSHelpers.GodlikeClient.Values">
            <summary>
            Old values of data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.GodlikeClient.LastMessageID">
            <summary>
            Last message ID, used to identify messages. Will increment for each message sent.
            </summary>
        </member>
        <member name="P:OSRSHelpers.GodlikeClient.Responses">
            <summary>
            Responses from the server.
            </summary>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.Start">
            <summary>
            Starts the WebSocket connection.
            </summary>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.Stop">
            <summary>
            Stops the WebSocket connection.
            </summary>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.SendMessage(System.String,System.Boolean)">
            <summary>
            Sends a message to the server.
            <br/><br/>
            Possible message types:
            <br/>
            <list type="bullet">
            <item>
            <description>
            force #handler: Forces an update of data, specify #handler to only force update a specific handler.<br/>
            Example: "force npc" will force an update of the NPC handler.
            </description>
            </item>
            <item>
            <description>
            fetch #handler: Fetches data from specifed #handler, if <paramref name="InbWaitForResponse"/> is true, the method will wait and return the response when available, if false, the method will not wait and return null.<br/>
            Example: "fetch npc" will fetch data of the NPC handler, and return the response if <paramref name="InbWaitForResponse"/> is true.
            </description>
            </item>
            <item>
            <description>
            set #var #value: Sets a #var to the specified #value.<br/>
            Example: "set close_npcs_max_distance 1500" will set the close_npcs_max_distance of the CloseNPCsHandler to 1500, which means it will only return npcs within 1500 units.
            </description>
            </item>
            </list>
            </summary>
            <param name="InMessage">The message to send.</param>
            <param name="InbWaitForResponse">Whether to wait for a response or not. If true, the method will return the response, if false, the method will return null.</param>
            <returns>Response from the server, if <paramref name="InbWaitForResponse"/> is true, otherwise null.</returns>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.ProcessContent(System.String)">
            <summary>
            Process the content of a websocket message, and call subscribers.
            </summary>
            <param name="InContent">Content of the response.</param>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.Subscribe(System.String,System.String,System.Action{System.String})">
             <summary>
             Subscribe to a data key.
             Subscribers will be cleared when the script is stopped.
            
             When data is received, <paramref name="InAction"/> is called with the data as a string, if the data has changed.
            
             Subscribing to a key will only retrieve data for that key, and not the entire container.
             </summary>
             <param name="InDataContainer">Container to subscribe to.</param>
             <param name="InDataKey">Key to subscribe to.</param>
             <param name="InAction">Action to call when data is received.</param>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.Subscribe(System.String,System.Action{System.String})">
             <summary>
             Subscribe to a data container, without a key, which will retrieve all data in the container.
             Subscribers will be cleared when the script is stopped.
            
             When data is received, <paramref name="InAction"/> is called with the data as a string, if the data has changed.
            
             Subscribing to a container will retrieve all data in the container, and not just a single key.
             </summary>
             <param name="InDataContainer">Container to subscribe to.</param>
             <param name="InAction">Action to call when data is received.</param>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.Unsubscribe(System.String,System.String,System.Action{System.String})">
            <summary>
            Unsubscribe from a data key.
            </summary>
            <param name="InDataContainer">Container to unsubscribe from.</param>
            <param name="InDataKey">Key to unsubscribe from.</param>
            <param name="InAction">Action to unsubscribe.</param>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.Unsubscribe(System.String,System.Action{System.String})">
            <summary>
            Unsubscribe from a data container, without a key.
            </summary>
            <param name="InDataContainer">Container to unsubscribe from.</param>
            <param name="InAction">Action to unsubscribe.</param>
        </member>
        <member name="M:OSRSHelpers.GodlikeClient.WaitForConnection">
            <summary>
            Wait for the WebSocket to connect.
            </summary>
        </member>
        <member name="T:OSRSHelpers.DataTypes.BankHandler">
            <summary>
            Bank class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BankHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Bank class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.BankHandler.bIsOpen">
            <summary>
            Whether the bank is open.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.BankHandler.BankRegion">
            <summary>
            Bank region. Only the item container region.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BankHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.BankHandler.CheckIsOpen">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.BaseHandler">
            <summary>
            Base handler class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.BaseHandler.DataID">
            <summary>
            Data ID.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.BaseHandler.Data">
            <summary>
            JSON data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.BaseHandler.Wrapper">
            <summary>
            Wrapper for thread safety.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BaseHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Base data constructor.
            </summary>
            <param name="InDataID">Data ID. Will subscribe to data updates with this ID.</param>
            <param name="InWrapper">Wrapper for thread safety.</param>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BaseHandler.SetFromJSON(System.String)">
            <summary>
            Set data from JSON.
            </summary>
            <param name="InData">JSON data to set from.</param>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BaseHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <summary>
            Set data from JSON.
            </summary>
            <param name="InData">JSON data to set from.</param>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BaseHandler.ForceUpdate(System.Boolean)">
            <summary>
            Force update data.
            </summary>
            <param name="InbWaitForNewData">If true, wait for new data to be fetched and initialized.</param>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BaseHandler.SetValue``1(``0@,``0)">
            <summary>
            Set value with thread safety.
            </summary>
            <param name="InValue">Reference to the value to set.</param>
            <param name="InNewValue">New value to set.</param>
            <typeparam name="T">Type of the value.</typeparam>
        </member>
        <member name="M:OSRSHelpers.DataTypes.BaseHandler.GetValue``1(``0@)">
            <summary>
            Get value with thread safety.
            </summary>
            <param name="InValue">Reference to the value to get.</param>
            <typeparam name="T">Type of the value.</typeparam>
            <returns>Value.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.CameraHandler">
            <summary>
            Game camera class.
            <br/><br/>
            It contains the camera position/rotation.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CameraHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Game camera class.
            <br/><br/>
            It contains the camera position/rotation.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.X">
            <summary>
            Camera X position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.Y">
            <summary>
            Camera Y position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.Z">
            <summary>
            Camera Z position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.Pitch">
            <summary>
            Camera pitch.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.Yaw">
            <summary>
            Camera yaw.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.FP_X">
            <summary>
            Camera floating point X position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.FP_Y">
            <summary>
            Camera floating point Y position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.FP_Z">
            <summary>
            Camera floating point Z position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.FP_Pitch">
            <summary>
            Camera floating point pitch.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CameraHandler.FP_Yaw">
            <summary>
            Camera floating point yaw.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CameraHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.ChatHandler">
            <summary>
            Chat class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ChatHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Chat class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ChatHandler.Messages">
            <summary>
            List of messages.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ChatHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.CloseNPCsHandler">
            <summary>
            Close NPCs class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseNPCsHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Close NPCs class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CloseNPCsHandler.NPCs">
            <summary>
            List of npcs.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseNPCsHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseNPCsHandler.GetClosestNPC(System.Collections.Generic.List{System.String},System.Boolean,System.Boolean)">
            <summary>
            Get the closest npc.
            </summary>
            <param name="InNames">Names of the npcs to get.</param>
            <param name="InbOnlyNonTagged">If true, only get npcs that have not been tagged by someone else.</param>
            <param name="InbShouldForceUpdate">If true, force update the npcs before clicking.</param>
            <returns>The closest npc.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseNPCsHandler.GetClosestToMouse(System.Collections.Generic.List{System.String},System.Boolean,System.Boolean)">
            <summary>
            Get the closest npc to the mouse.
            </summary>
            <param name="InNames">Names of the npcs to get.</param>
            <param name="InbOnlyNonTagged">If true, only get npcs that have not been tagged by someone else.</param>
            <param name="InbShouldForceUpdate">If true, force update the npcs before clicking.</param>
            <returns>The closest npc to the mouse.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.CloseObjectsHandler">
            <summary>
            CloseObjects class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseObjectsHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            CloseObjects class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.CloseObjectsHandler.Objects">
            <summary>
            List of objects.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseObjectsHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseObjectsHandler.GetClosestObject(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get the closest object.
            </summary>
            <param name="InNames">Names of the objects to get.</param>
            <param name="InbShouldForceUpdate">If true, force update the objects before clicking.</param>
            <returns>The closest object.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.CloseObjectsHandler.GetClosestToMouse(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get the closest object to the mouse.
            </summary>
            <param name="InNames">Names of the objects to get.</param>
            <param name="InbShouldForceUpdate">If true, force update the objects before clicking.</param>
            <returns>The closest object to the mouse.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.ClosePlayersHandler">
            <summary>
            CloseObjects class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ClosePlayersHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            CloseObjects class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ClosePlayersHandler.Players">
            <summary>
            List of remote players.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ClosePlayersHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.ClosePlayersHandler.GetClosestPlayer(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get the closest player.
            </summary>
            <param name="InNames">Names of the players to get.</param>
            <param name="InbShouldForceUpdate">If true, force update the players before clicking.</param>
            <returns>The closest player.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ClosePlayersHandler.GetClosestToMouse(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get the closest player to the mouse.
            </summary>
            <param name="InNames">Names of the players to get.</param>
            <param name="InbShouldForceUpdate">If true, force update the players before clicking.</param>
            <returns>The closest player to the mouse.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.DebugHandler">
            <summary>
            Debug class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugHandler.Widgets">
             <summary>
             Widgets.
            
             Key is the ID of the widget.
             </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.ShowWidgetInspector">
            <summary>
            Shows the widget inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.HideWidgetInspector">
            <summary>
            Hides the widget inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.ShowNPCInspector">
            <summary>
            Shows the NPC inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.HideNPCInspector">
            <summary>
            Hides the NPC inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.ShowObjectInspector">
            <summary>
            Shows the widget inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugHandler.HideObjectInspector">
            <summary>
            Hides the object inspector.
            </summary>
        </member>
        <member name="T:OSRSHelpers.DataTypes.DebugNPCInspector">
            <summary>
            Debug NPC inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugNPCInspector.#ctor(OSRSHelpers.DataTypes.CloseNPCsHandler)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugNPCInspector.OnRender">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.DebugObjectInspector">
            <summary>
            Debug widget inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugObjectInspector.#ctor(OSRSHelpers.DataTypes.CloseObjectsHandler)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugObjectInspector.OnRender">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.DebugWidgetInspector">
            <summary>
            Debug widget inspector.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugWidgetInspector.#ctor(OSRSHelpers.DataTypes.DebugHandler)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugWidgetInspector.OnRender">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.DebugWidgetData">
            <summary>
            Debug widget data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ID">
            <summary>
            ID of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ParentID">
            <summary>
            Parent ID of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.bIsHidden">
            <summary>
            Is the widget hidden?
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.bIsSelfHidden">
            <summary>
            Is the widget self hidden?
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.Text">
            <summary>
            Text of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.Name">
            <summary>
            Name of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ItemID">
            <summary>
            Item ID of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ItemQuantity">
            <summary>
            Item quantity of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ItemQuantityMode">
            <summary>
            Item quantity mode of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ModelID">
            <summary>
            Model ID of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.ModelType">
            <summary>
            Model type of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.AnimationID">
            <summary>
            Animation ID of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.SpriteID">
            <summary>
            Sprite ID of the widget.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.DebugWidgetData.Region">
            <summary>
            Region of the widget.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.DebugWidgetData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">JSON data.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.EquipmentHandler">
            <summary>
            Equipment class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.EquipmentHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Equipment class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.EquipmentHandler.ItemSlotTypes">
            <summary>
            List of item regions.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.EquipmentHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.EquipmentHandler.CheckIsOpen">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.GameHandler">
            <summary>
            Game class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.GameHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Game class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.GameHandler.State">
            <summary>
            State of the game, e.g. LOGGED_IN, LOGIN_SCREEN etc.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.GameHandler.Cycle">
            <summary>
            Current cycle of the game.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.GameHandler.Tick">
            <summary>
            Current tick of the game.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.GameHandler.ClientScale">
            <summary>
            Scale of the client.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.GameHandler.ClientPlane">
            <summary>
            Plane of the client.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.GameHandler.bIsLoggedIn">
            <summary>
            If true, the player is logged in.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.GameHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.GameHandler.EGameState">
            <summary>
            Game state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.UNKNOWN">
            <summary>
            Unknown state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.STARTING">
            <summary>
            Starting state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.LOGIN_SCREEN">
            <summary>
            Login screen state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.LOGIN_SCREEN_AUTHENTICATOR">
            <summary>
            Login screen authenticator state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.LOGGING_IN">
            <summary>
            Logging in state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.LOADING">
            <summary>
            Loading state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.LOGGED_IN">
            <summary>
            Logged in state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.CONNECTION_LOST">
            <summary>
            Connection lost state.
            </summary>
        </member>
        <member name="F:OSRSHelpers.DataTypes.GameHandler.EGameState.HOPPING">
            <summary>
            Hopping state.
            </summary>
        </member>
        <member name="T:OSRSHelpers.DataTypes.InventoryHandler">
            <summary>
            Inventory class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.InventoryHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Inventory class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.InventoryHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.InventoryHandler.CheckIsOpen">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.ItemContainerHandler">
             <summary>
             Item container base class.
            
             Call Initialize() in the constructor of the derived class.
             </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
             <summary>
             Item container base class.
            
             Call Initialize() in the constructor of the derived class.
             </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemContainerHandler.Items">
            <summary>
            Items in the container.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemContainerHandler.ItemRegions">
            <summary>
            List of item regions.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemContainerHandler.ItemCount">
            <summary>
            Amount of (valid, not -1 in ID) items in the container.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemContainerHandler.bIsEmpty">
            <summary>
            True if the container is empty, false otherwise.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemContainerHandler.bIsFull">
            <summary>
            True if the container is full, false otherwise.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemContainerHandler.GEPrice">
            <summary>
            Grand Exchange price of all items in the container.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.ItemContainerSetFromJSON(System.Text.Json.JsonElement)">
            <summary>
            Sets the container from JSON data.
            </summary>
            <param name="InData">JSON data to set from.</param>
            <returns>True if the container has changed, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItem(System.Int32)">
            <summary>
            Checks if the inventory has an item with the given ID.
            </summary>
            <param name="InID">ID of the item.</param>
            <returns>True if the inventory has an item with the given ID, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItem(System.Int32,System.Int32)">
            <summary>
            Checks if the inventory has an item with the given ID and quantity.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>True if the inventory has an item with the given ID and quantity, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItem(System.String)">
            <summary>
            Checks if the inventory has an item with the given name.
            </summary>
            <param name="InName">Name of the item.</param>
            <returns>True if the inventory has an item with the given name, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItem(System.String,System.Int32)">
            <summary>
            Checks if the inventory has an item with the given name and quantity.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>True if the inventory has an item with the given name and quantity, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Checks if the inventory has all the items with the given IDs.
            </summary>
            <param name="InIDs">IDs of the items.</param>
            <returns>True if the inventory has all the items with the given IDs, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItems(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks if the inventory has all the items with the given IDs.
            </summary>
            <param name="InNames">Names of the items.</param>
            <returns>True if the inventory has all the items with the given names, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.HasItemInSlot(System.Int32)">
            <summary>
            Checks if the inventory has an item in the given slot.
            </summary>
            <param name="InSlot">Slot to check.</param>
            <returns>True if the inventory has an item in the given slot, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItem(System.Int32)">
            <summary>
            Gets the first item with the given ID.
            </summary>
            <param name="InID">ID of the item.</param>
            <returns>Item with the given ID, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItem(System.Int32,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given ID.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="OutItem">Item with the given ID, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItem(System.String)">
            <summary>
            Gets the first item with the given name.
            </summary>
            <param name="InName">Name of the item.</param>
            <returns>Item with the given name, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItem(System.String,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given name.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="OutItem">Item with the given name, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItemRandom(System.Int32)">
            <summary>
            Gets the first item with the given ID, using a random order.
            </summary>
            <param name="InID">ID of the item.</param>
            <returns>Item with the given ID, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItemRandom(System.Int32,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given ID, using a random order.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="OutItem">Item with the given ID, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItemRandom(System.String)">
            <summary>
            Gets the first item with the given name, using a random order.
            </summary>
            <param name="InName">Name of the item.</param>
            <returns>Item with the given name, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItemRandom(System.String,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given name, using a random order.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="OutItem">Item with the given name, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItem(System.Int32,System.Int32)">
            <summary>
            Gets the first item with the given ID and quantity.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>Item with the given ID and quantity, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItem(System.Int32,System.Int32,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given ID and quantity.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <param name="OutItem">Item with the given ID and quantity, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItem(System.String,System.Int32)">
            <summary>
            Gets the first item with the given name and quantity.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>Item with the given name and quantity, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItem(System.String,System.Int32,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given name and quantity.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <param name="OutItem">Item with the given name and quantity, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItemRandom(System.Int32,System.Int32)">
            <summary>
            Gets the first item with the given ID and quantity, using a random order.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>Item with the given ID and quantity, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItemRandom(System.Int32,System.Int32,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given ID and quantity, using a random order.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <param name="OutItem">Item with the given ID and quantity, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItemRandom(System.String,System.Int32)">
            <summary>
            Gets the first item with the given name and quantity, using a random order.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>Item with the given name and quantity, null if not found.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItemRandom(System.String,System.Int32,OSRSHelpers.DataTypes.ItemData@)">
            <summary>
            Tries to get the first item with the given name and quantity, using a random order.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <param name="OutItem">Item with the given name and quantity, null if not found.</param>
            <returns>True if the item was found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItems(System.Int32)">
            <summary>
            Gets all items with the given ID.
            </summary>
            <param name="InID">ID of the item.</param>
            <returns>Items with the given ID.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItems(System.Int32,System.Collections.Generic.List{OSRSHelpers.DataTypes.ItemData}@)">
            <summary>
            Tries to get all items with the given ID.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="OutItems">Items with the given ID.</param>
            <returns>True if the items were found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItems(System.String)">
            <summary>
            Gets all items with the given name.
            </summary>
            <param name="InName">Name of the item.</param>
            <returns>Items with the given name.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItems(System.String,System.Collections.Generic.List{OSRSHelpers.DataTypes.ItemData}@)">
            <summary>
            Tries to get all items with the given name.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="OutItems">Items with the given name.</param>
            <returns>True if the items were found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItems(System.Int32,System.Int32)">
            <summary>
            Gets all items with the given ID and quantity.
            
            Note: This only counts items that has the given quantity or more.
            So if an item has 3 and another has 4 and you search for 7, it will NOT return those two items, as they don't have 7 or more.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>Items with the given ID and quantity.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItems(System.Int32,System.Int32,System.Collections.Generic.List{OSRSHelpers.DataTypes.ItemData}@)">
            <summary>
            Tries to get all items with the given ID and quantity.
            
            Note: This only counts items that has the given quantity or more.
            So if an item has 3 and another has 4 and you search for 7, it will NOT return those two items, as they don't have 7 or more.
            </summary>
            <param name="InID">ID of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <param name="OutItems">Items with the given ID and quantity.</param>
            <returns>True if the items were found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetItems(System.String,System.Int32)">
            <summary>
            Gets all items with the given name and quantity.
            
            Note: This only counts items that has the given quantity or more.
            So if an item has 3 and another has 4 and you search for 7, it will NOT return those two items, as they don't have 7 or more.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <returns>Items with the given name and quantity.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.TryGetItems(System.String,System.Int32,System.Collections.Generic.List{OSRSHelpers.DataTypes.ItemData}@)">
            <summary>
            Tries to get all items with the given name and quantity.
            
            Note: This only counts items that has the given quantity or more.
            So if an item has 3 and another has 4 and you search for 7, it will NOT return those two items, as they don't have 7 or more.
            </summary>
            <param name="InName">Name of the item.</param>
            <param name="InQuantity">Quantity of the item.</param>
            <param name="OutItems">Items with the given name and quantity.</param>
            <returns>True if the items were found, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.GetAllItems">
            <summary>
            Gets all items as a list.
            </summary>
            <returns>All items.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.CheckIsOpen">
            <summary>
            Checks if the container is open.
            </summary>
            <returns>True if the container is open, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.ClickItemBySlot(System.Int32,Portal.Input.EMouseKey,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean,System.Boolean)">
            <summary>
            Clicks the item in the given slot.
            </summary>
            <param name="InSlot">Slot of the item.</param>
            <param name="InMouseKey">Mouse key to use.</param>
            <param name="InMouseMoveOptions">Mouse move options to use.</param>
            <param name="InbUseRegionAsDestRange">True if the region found should be used as the destination range, false otherwise.</param>
            <param name="InbCalculateSpeedByDistance">True if the speed should be calculated by distance, false otherwise.</param>
            <returns>True if the item was clicked, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.ClickItemByID(System.Int32,System.Boolean,Portal.Input.EMouseKey,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean,System.Boolean)">
            <summary>
            Finds the slot of the item with the given ID, and clicks it.
            </summary>
            <param name="InItemID">ID of the item.</param>
            <param name="InbRandomizeOrder">True if the order of the items should be randomized, false otherwise.</param>
            <param name="InMouseKey">Mouse key to use.</param>
            <param name="InMouseMoveOptions">Mouse move options to use.</param>
            <param name="InbUseRegionAsDestRange">True if the region found should be used as the destination range, false otherwise.</param>
            <param name="InbCalculateSpeedByDistance">True if the speed should be calculated by distance, false otherwise.</param>
            <returns>True if the item was clicked, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.ClickItemByName(System.String,System.Boolean,Portal.Input.EMouseKey,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean,System.Boolean)">
            <summary>
            Finds the slot of the item with the given name, and clicks it.
            </summary>
            <param name="InItemName">Name of the item.</param>
            <param name="InbRandomizeOrder">True if the order of the items should be randomized, false otherwise.</param>
            <param name="InMouseKey">Mouse key to use.</param>
            <param name="InMouseMoveOptions">Mouse move options to use.</param>
            <param name="InbUseRegionAsDestRange">True if the region found should be used as the destination range, false otherwise.</param>
            <param name="InbCalculateSpeedByDistance">True if the speed should be calculated by distance, false otherwise.</param>
            <returns>True if the item was clicked, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.MouseMoveItemBySlot(System.Int32,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean,System.Boolean)">
            <summary>
            Moves the mouse to the item in the given slot.
            </summary>
            <param name="InSlot">Slot of the item.</param>
            <param name="InMouseMoveOptions">Mouse move options to use.</param>
            <param name="InbUseRegionAsDestRange">True if the region found should be used as the destination range, false otherwise.</param>
            <param name="InbCalculateSpeedByDistance">True if the speed should be calculated by distance, false otherwise.</param>
            <returns>True if the mouse was moved to the item, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.MouseMoveItemByID(System.Int32,System.Boolean,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean,System.Boolean)">
            <summary>
            Finds the slot of the item with the given ID, and moves the mouse to it.
            </summary>
            <param name="InItemID">ID of the item.</param>
            <param name="InbRandomizeOrder">True if the order of the items should be randomized, false otherwise.</param>
            <param name="InMouseMoveOptions">Mouse move options to use.</param>
            <param name="InbUseRegionAsDestRange">True if the region found should be used as the destination range, false otherwise.</param>
            <param name="InbCalculateSpeedByDistance">True if the speed should be calculated by distance, false otherwise.</param>
            <returns>True if the mouse was moved to the item, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemContainerHandler.MouseMoveItemByName(System.String,System.Boolean,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean,System.Boolean)">
            <summary>
            Finds the slot of the item with the given name, and moves the mouse to it.
            </summary>
            <param name="InItemName">Name of the item.</param>
            <param name="InbRandomizeOrder">True if the order of the items should be randomized, false otherwise.</param>
            <param name="InMouseMoveOptions">Mouse move options to use.</param>
            <param name="InbUseRegionAsDestRange">True if the region found should be used as the destination range, false otherwise.</param>
            <param name="InbCalculateSpeedByDistance">True if the speed should be calculated by distance, false otherwise.</param>
            <returns>True if the mouse was moved to the item, false otherwise.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.LootHandler">
            <summary>
            Loot class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.LootHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Loot class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.LootHandler.Items">
            <summary>
            List of items.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.LootHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.LootHandler.GetLootInRange(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get loot in range.
            </summary>
            <returns>List of loot data.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.LootHandler.GetClosestLoot(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get the closest loot.
            </summary>
            <param name="InNames">Names of the items to get.</param>
            <param name="InbShouldForceUpdate">If true, force update the loot before clicking.</param>
            <returns>The closest loot.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.LootHandler.GetClosestToMouse(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Get the closest loot to the mouse.
            </summary>
            <param name="InNames">Names of the items to get.</param>
            <param name="InbShouldForceUpdate">If true, force update the loot before clicking.</param>
            <returns>The closest loot to the mouse.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.NPCHandler">
            <summary>
            NPC class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.NPCHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            NPC class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.Name">
            <summary>
            Name of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.ID">
            <summary>
            ID of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.Hash">
            <summary>
            Hash of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.HealthCur">
            <summary>
            Current health of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.HealthMax">
            <summary>
            Maximum health of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.CombatLevel">
            <summary>
            Combat level of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.bIsDead">
            <summary>
            If true, the NPC is dead.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.bHasBeenTagged">
            <summary>
            If true, the NPC has been tagged by someone else.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.Position">
            <summary>
            Position of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCHandler.NpcData">
            <summary>
            Data of the NPC.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.NPCHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.ShopHandler">
            <summary>
            Shop class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ShopHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Shop class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ShopHandler.bIsOpen">
            <summary>
            Whether the shop is open.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ShopHandler.ShopRegion">
            <summary>
            Shop region. Only the item container region.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ShopHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.ShopHandler.CheckIsOpen">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.SkillsHandler">
            <summary>
            Skills class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.SkillsHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Skills class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Attack">
            <summary>
            Attack skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Strength">
            <summary>
            Strength skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Defence">
            <summary>
            Defence skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Ranged">
            <summary>
            Ranged skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Prayer">
            <summary>
            Prayer skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Magic">
            <summary>
            Magic skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Runecrafting">
            <summary>
            Runecrafting skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Construction">
            <summary>
            Construction skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Hitpoints">
            <summary>
            Hitpoints skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Agility">
            <summary>
            Agility skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Herblore">
            <summary>
            Herblore skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Thieving">
            <summary>
            Thieving skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Crafting">
            <summary>
            Crafting skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Fletching">
            <summary>
            Fletching skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Slayer">
            <summary>
            Slayer skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Hunter">
            <summary>
            Hunter skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Mining">
            <summary>
            Mining skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Smithing">
            <summary>
            Smithing skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Fishing">
            <summary>
            Fishing skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Cooking">
            <summary>
            Cooking skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Firemaking">
            <summary>
            Firemaking skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Woodcutting">
            <summary>
            Woodcutting skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Farming">
            <summary>
            Farming skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillsHandler.Total">
            <summary>
            Total skill level.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.SkillsHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.SlayerHandler">
            <summary>
            Slayer class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.SlayerHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Slayer class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SlayerHandler.Name">
            <summary>
            Name of the slayer task.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SlayerHandler.Amount">
            <summary>
            Amount of the slayer task.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SlayerHandler.Location">
            <summary>
            Location of the slayer task.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.SlayerHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.StatusHandler">
            <summary>
            Status class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Status class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.HealthCur">
            <summary>
            Current health of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.HealthMax">
            <summary>
            Maximum health of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.HealthPercent">
            <summary>
            Percent health of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.PrayerCur">
            <summary>
            Current prayer of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.PrayerMax">
            <summary>
            Maximum prayer of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.PrayerPercent">
            <summary>
            Percent prayer of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.bIsQuickPrayerEnabled">
            <summary>
            If true, quick prayer is enabled.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.ActivePrayers">
            <summary>
            Active prayers of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.RunEnergy">
            <summary>
            Current run energy of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.Weight">
            <summary>
            Current weight of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.bIsRunEnabled">
            <summary>
            If true, run is enabled.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.CombatLevel">
            <summary>
            Combat level of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.AttackStyle">
            <summary>
            Current attack style of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.SpecialAttack">
            <summary>
            Current special attack of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.bIsDead">
            <summary>
            If true, the player is dead.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.bIsIdle">
            <summary>
            If true, the player is idle.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.bIsWalking">
            <summary>
            If true, the player is walking.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.bIsRunning">
            <summary>
            If true, the player is running.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.Animation">
            <summary>
            Player's animation.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.AnimationPose">
            <summary>
            Player's pose.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.HeadIcon">
            <summary>
            Player's overhead icon.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.Position">
            <summary>
            Position of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.LocalPosition">
            <summary>
            Local position of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.StatusHandler.WorldPosition">
            <summary>
            World position of the player.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.IsPrayerActive(OSRSHelpers.Types.EPrayer)">
            <summary>
            If the player has a certain prayer active.
            </summary>
            <param name="InPrayer">Prayer to check.</param>
            <returns>True if the player has the prayer active.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.IsPrayerActive(System.Collections.Generic.IEnumerable{OSRSHelpers.Types.EPrayer})">
            <summary>
            If the player has all of the prayers active.
            </summary>
            <param name="InPrayers">Prayers to check.</param>
            <returns>True if the player has all of the prayers active.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.EnablePrayer(System.Collections.Generic.IEnumerable{OSRSHelpers.Types.EPrayer},System.Boolean)">
            <summary>
            Opens the prayer tab and enables prayers if they are not active.
            </summary>
            <param name="InPrayers">Prayers to enable.</param>
            <param name="InbShouldForceUpdate">If true, force update the prayers before enabling.</param>
            <returns>True if the prayers were enabled, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.DisablePrayer(System.Collections.Generic.IEnumerable{OSRSHelpers.Types.EPrayer},System.Boolean)">
            <summary>
            Opens the prayer tab and disables prayers if they are active.
            </summary>
            <param name="InPrayers">Prayers to disable.</param>
            <param name="InbShouldForceUpdate">If true, force update the prayers before disabling.</param>
            <returns>True if the prayers were disabled, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.TogglePrayer(System.Collections.Generic.IEnumerable{OSRSHelpers.Types.EPrayer},System.Boolean)">
            <summary>
            Opens the prayer tab and clicks prayers.
            </summary>
            <param name="InPrayers">Prayers to click.</param>
            <param name="InbShouldForceUpdate">If true, force update the prayers before clicking.</param>
            <returns>True if the prayers were clicked, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.StatusHandler.ClickPrayer(System.Collections.Generic.IEnumerable{OSRSHelpers.Types.EPrayer},System.Predicate{OSRSHelpers.Types.EPrayer},System.Boolean)">
            <summary>
            Opens the prayer tab and clicks prayers.
            </summary>
            <param name="InPrayers">Prayers to click.</param>
            <param name="InPredicate">Predicate to check if the prayers should be clicked.</param>
            <param name="InbShouldForceUpdate">If true, force update the prayers before clicking.</param>
            <returns>True if the prayers were clicked, false otherwise.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.ChatMessageData">
            <summary>
            Loot data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ChatMessageData.Sender">
            <summary>
            Name of the sender.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ChatMessageData.Message">
            <summary>
            Content of the message.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ChatMessageData.Type">
            <summary>
            Type of the message.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ChatMessageData.Timestamp">
            <summary>
            Timestamp of the message.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ChatMessageData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">Json data to parse.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.ItemData">
            <summary>
            Item data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemData.Name">
            <summary>
            Name of the item.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemData.ID">
            <summary>
            ID of the item.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemData.Quantity">
            <summary>
            Quantity of the item.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemData.Hash">
            <summary>
            Hash of the item.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemData.GePrice">
            <summary>
            Grand Exchange price of the item (calculated with quantity in mind, so to get the individual price, divide by quantity).
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ItemData.Slot">
            <summary>
            Slot in item container of the item. If it doesn't belong to a container, it should be -1.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemData.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="InSlot">Slot of the item. If it doesn't belong to a container, it should be -1.</param>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ItemData.#ctor(System.Text.Json.JsonElement,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">Json data to parse.</param>
            <param name="InItemSlot">Slot of the item. If it doesn't belong to a container, it should be -1.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.LootData">
            <summary>
            Loot data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.LootData.Item">
            <summary>
            Loot item.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.LootData.Position">
            <summary>
            Position of the loot.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.LootData.LocalPosition">
            <summary>
            Local position of the loot.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.LootData.WorldPosition">
            <summary>
            World position of the loot.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.LootData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">Json data to parse.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.MenuOptionData">
            <summary>
            Menu Option data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Index">
            <summary>
            Index of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Option">
            <summary>
            Left hand side text of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Target">
            <summary>
            Right hand side text of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Identifier">
            <summary>
            Identifier of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Type">
            <summary>
            Type of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Param0">
            <summary>
            Param0 of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Param1">
            <summary>
            Param1 of the option.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.bIsForceLeftClick">
            <summary>
            If true, the option is force left click.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.bIsDeprioritized">
            <summary>
            If true, the option is deprioritized.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.bIsItemOp">
            <summary>
            If true, the option is an item operation like drop, eat, etc.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Region">
            <summary>
            Region of the option in screen space.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.Item">
            <summary>
            Item if right clicked on an item.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.NPC">
            <summary>
            NPC if right clicked on an NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.MenuOptionData.RemotePlayer">
            <summary>
            Remote player if right clicked on a player.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.MenuOptionData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">Json data to parse.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.NPCData">
            <summary>
            Npc data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.Name">
            <summary>
            Name of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.ID">
            <summary>
            ID of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.Hash">
            <summary>
            Hash of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.HealthCur">
            <summary>
            Current health of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.HealthMax">
            <summary>
            Maximum health of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.CombatLevel">
            <summary>
            Combat level of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.bIsDead">
            <summary>
            If true, the NPC is dead.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.bHasBeenTagged">
            <summary>
            If true, the NPC has been tagged by someone else.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.Position">
            <summary>
            Position of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.LocalPosition">
            <summary>
            Local position of the NPC.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.NPCData.WorldPosition">
            <summary>
            World position of the NPC.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.NPCData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">Json data to parse.</param>
        </member>
        <member name="M:OSRSHelpers.DataTypes.NPCData.ApplyNewData(System.Text.Json.JsonElement)">
            <summary>
            Applies new data to the NPC.
            </summary>
            <param name="InJson">Json data to apply.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.ObjectData">
            <summary>
            Object data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ObjectData.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ObjectData.ID">
            <summary>
            ID of the object.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ObjectData.Hash">
            <summary>
            Hash of the object.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ObjectData.Position">
            <summary>
            Position of the object.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ObjectData.LocalPosition">
            <summary>
            Local position of the object.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ObjectData.WorldPosition">
            <summary>
            World position of the object.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ObjectData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InData">Data to set from.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.RemotePlayerData">
            <summary>
            Remote player data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.Name">
            <summary>
            Name of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.ID">
            <summary>
            ID of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.Hash">
            <summary>
            Hash of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.HealthCur">
            <summary>
            Current health of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.HealthMax">
            <summary>
            Maximum health of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.CombatLevel">
            <summary>
            Combat level of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.bIsDead">
            <summary>
            If true, the remote player is dead.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.HeadIcon">
            <summary>
            Remote player's overhead icon.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.Position">
            <summary>
            Position of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.LocalPosition">
            <summary>
            Local position of the remote player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.RemotePlayerData.WorldPosition">
            <summary>
            World position of the remote player.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.RemotePlayerData.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InJson">Json data to parse.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.SkillData">
            <summary>
            Skill data.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillData.Type">
            <summary>
            Type of the skill.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillData.CurrentLevel">
            <summary>
            Current level of the skill.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillData.MaxLevel">
            <summary>
            Maximum level of the skill.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.SkillData.Experience">
            <summary>
            Experience of the skill.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.SkillData.ApplyNewData(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Applies new data to the skill.
            </summary>
            <param name="InJson">Json data to apply.</param>
        </member>
        <member name="T:OSRSHelpers.DataTypes.UIHandler">
            <summary>
            UI class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.UIHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            UI class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIHandler.Tabs">
            <summary>
            List of ui tabs, like inventory, equipment, etc.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIHandler.Prayers">
            <summary>
            List of ui prayers.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIHandler.PrayerButton">
            <summary>
            Quick prayer button.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIHandler.RunButton">
            <summary>
            Run button.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIHandler.SpecialButton">
            <summary>
            Special attack button.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIHandler.LogoutButton">
            <summary>
            Logout button. Only visible when the logout tab is open.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.UIHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:OSRSHelpers.DataTypes.UIMenuHandler">
            <summary>
            UI Menu class. It is the right click menu.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.UIMenuHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            UI Menu class. It is the right click menu.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIMenuHandler.bIsMenuOpen">
            <summary>
            If true, the menu is open.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIMenuHandler.MenuOptions">
            <summary>
            List of menu options.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.UIMenuHandler.Region">
            <summary>
            Region of the menu.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.UIMenuHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.UIMenuHandler.TryClickOption(System.Int32,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean)">
            <summary>
            Tries to click a menu option.
            </summary>
            <param name="InIndex">Index of the option.</param>
            <param name="InMouseMoveOptions">Mouse move options.</param>
            <param name="InbShouldForceUpdate">If true, force update the menu options before clicking.</param>
            <returns>True if the option was clicked, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.DataTypes.UIMenuHandler.TryClickOption(System.String,System.String,System.Nullable{Portal.Input.MouseMoveOptions},System.Boolean)">
            <summary>
            Tries to click a menu option.
            </summary>
            <param name="InName">Name (left hand text) of the option.</param>
            <param name="InTarget">Target (right hand text) of the option.</param>
            <param name="InMouseMoveOptions">Mouse move options.</param>
            <param name="InbShouldForceUpdate">If true, force update the menu options before clicking.</param>
            <returns>True if the option was clicked, false otherwise.</returns>
        </member>
        <member name="T:OSRSHelpers.DataTypes.ViewportHandler">
            <summary>
            Game viewport class.
            <br/><br/>
            The viewport is the visible area of the game window.
            <br/><br/>
            It contains the X, Y, Width, and Height of the viewport.
            <br/><br/>
            X and Y are the offset of the viewport from the top-left corner of the game window.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ViewportHandler.#ctor(System.String,Portal.ThreadSafeWrapper)">
            <summary>
            Game viewport class.
            <br/><br/>
            The viewport is the visible area of the game window.
            <br/><br/>
            It contains the X, Y, Width, and Height of the viewport.
            <br/><br/>
            X and Y are the offset of the viewport from the top-left corner of the game window.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ViewportHandler.X">
            <summary>
            X position of the viewport.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ViewportHandler.Y">
            <summary>
            Y position of the viewport.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ViewportHandler.Width">
            <summary>
            Width of the viewport.
            </summary>
        </member>
        <member name="P:OSRSHelpers.DataTypes.ViewportHandler.Height">
            <summary>
            Height of the viewport.
            </summary>
        </member>
        <member name="M:OSRSHelpers.DataTypes.ViewportHandler.InternalSetFromJSON(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.DataTypes.ViewportHandler.ContainsGamePoint(Portal.GamePoint)">
            <summary>
            Check if a game point is within the viewport.
            </summary>
            <param name="InPoint">Game point to check.</param>
            <returns>True if the game point is within the viewport, false otherwise.</returns>
        </member>
        <member name="T:OSRSHelpers.Helpers">
            <summary>
            Helper functions for OSRSHelpers.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Helpers.MAGIC_NUMBER_X">
            <summary>
            The border of the game window is 4 pixels wide, atleast on windows 11.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Helpers.MAGIC_NUMBER_Y">
            <summary>
            The header of the game window is 27 pixels tall, atleast on windows 11.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Helpers.TryGetProperty(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to get a property from data.
            </summary>
            <param name="InData">Data to get the property from.</param>
            <param name="InName">Name of the property.</param>
            <returns>The property, or null if it doesn't exist or is null.</returns>
        </member>
        <member name="M:OSRSHelpers.Helpers.GetPositionFromData(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Get a GamePoint from data.
            </summary>
            <param name="InData">Data to get the GamePoint from.</param>
            <returns>The GamePoint.</returns>
        </member>
        <member name="M:OSRSHelpers.Helpers.GetRegionFromData(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Get a GameRegion from data.
            </summary>
            <param name="InData">Data to get the GameRegion from.</param>
            <returns>The GameRegion.</returns>
        </member>
        <member name="M:OSRSHelpers.Helpers.LocalToCanvas(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a local point to a GamePoint.
            </summary>
            <param name="InX">X position.</param>
            <param name="InY">Y position.</param>
            <param name="InTileHeight">Tile height.</param>
            <returns>The GamePoint.</returns>
        </member>
        <member name="T:OSRSHelpers.OSRSExtension">
             <summary>
             OSRS Helper Extension
            
             Call OSRSExtension.Initialize() in your script start to use this extension.
             </summary>
        </member>
        <member name="M:OSRSHelpers.OSRSExtension.Loaded">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.OSRSExtension.GetRegisterableScriptTypes">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.OSRSExtension.Initialize">
            <summary>
            Must be called in script start for this extension to work
            </summary>
        </member>
        <member name="T:OSRSHelpers.Shared">
            <summary>
            Shared class, contains shared functionality.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.GodlikeClient">
            <summary>
            WebSocket client to use.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.BankInfo">
            <summary>
            Current bank.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.CameraInfo">
            <summary>
            Current camera.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.ChatInfo">
            <summary>
            Chat.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.CloseNPCsInfo">
            <summary>
            Close npcs.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.CloseObjectsInfo">
            <summary>
            Close objects.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.ClosePlayersInfo">
            <summary>
            Close players.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.DebugInfo">
            <summary>
            Debug.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.EquipmentInfo">
            <summary>
            Player's equipment.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.GameInfo">
            <summary>
            Current game information like tick and logged in state.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.InventoryInfo">
            <summary>
            Player's inventory.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.LootInfo">
            <summary>
            Ground loot.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.NPCInfo">
            <summary>
            Current NPC you're fighting/interracting with.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.ShopInfo">
            <summary>
            Current open shop.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.SkillsInfo">
            <summary>
            Current skills of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.SlayerInfo">
            <summary>
            Current slayer of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.StatusInfo">
            <summary>
            Current status of the player.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.UIInfo">
            <summary>
            Current UI.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.UIMenuInfo">
            <summary>
            Current UIMenu.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.ViewportInfo">
            <summary>
            Current viewport.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.ZoomLevels">
            <summary>
            Zoom level to use.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.TabKeybindings">
            <summary>
            Tab keybindings.
            <br/><br/>
            Default keybindings:
            <code>
            [ETabType.Combat] = EKey.F1,
            [ETabType.Skills] = EKey.F2,
            [ETabType.Quests] = EKey.F3,
            [ETabType.Inventory] = EKey.F4,
            [ETabType.Equipment] = EKey.F8,
            [ETabType.Prayer] = EKey.F9,
            [ETabType.Magic] = EKey.F10,
            [ETabType.Logout] = EKey.F11,
            [ETabType.Options] = EKey.F12
            </code><br/>
            If you want to customize these, you can do so in your script by setting the keybindings like so:<br/>
            <code>
            TabKeybindings[ETabType.Inventory] = EKey.F12;
            </code>
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.bUseKeybindForTabs">
            <summary>
            Whether or not to use keybinds for tabs.
            <br/><br/>
            See <see cref="P:OSRSHelpers.Shared.TabKeybindings"/> for more information.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.LoginWorkerInstance">
            <summary>
            Login worker instance.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.PrayerFlickWorkerInstance">
            <summary>
            Prayer flick worker instance.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Shared.SimpleCombatWorkerInstance">
            <summary>
            Simple combat worker instance.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Shared.Initialize">
            <summary>
            Initialize the shared class.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Shared.OpenRightClickMenu(Portal.GameRegion,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Nullable{Portal.Input.MouseMoveOptions})">
            <summary>
            Tries to open the right click menu at the current mouse position, and click the specified option.
            </summary>
            <param name="InOpenAtRegion">Region to open the menu at. If null, defaults to current mouse position.</param>
            <param name="InOptionToClick">Option to click. Defaults to null.</param>
            <param name="InOptionTarget">Target of the option. Defaults to null.</param>
            <param name="InDelayBeforeClick">Delay before clicking the option. Defaults to 100ms.</param>
            <param name="InDelayBeforeFindMenu">Delay after right clicking and before finding the menu. Defaults to 100ms.</param>
            <param name="InbClickCancelOnNotFound">Whether or not to click cancel if the option is not found. Defaults to true.</param>
            <param name="InMouseMoveOptions">Mouse move options to use. Defaults to null.</param>
            <returns>Whether or not the option was found and clicked.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.OpenRightClickMenu(System.Nullable{Portal.GamePoint},System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Nullable{Portal.Input.MouseMoveOptions})">
            <summary>
            Tries to open the right click menu at the specified point, and click the specified option.
            </summary>
            <param name="InOpenAtPoint">Point to open the menu at. Defaults to current mouse position.</param>
            <param name="InOptionToClick">Option to click. Defaults to null.</param>
            <param name="InOptionTarget">Target of the option. Defaults to null.</param>
            <param name="InDelayBeforeClick">Delay before clicking the option. Defaults to 100ms.</param>
            <param name="InDelayBeforeFindMenu">Delay after right clicking and before finding the menu. Defaults to 100ms.</param>
            <param name="InbClickCancelOnNotFound">Whether or not to click cancel if the option is not found. Defaults to true.</param>
            <param name="InMouseMoveOptions">Mouse move options to use. Defaults to null.</param>
            <returns>Whether or not the option was found and clicked.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.FindMouseTooltipOption(System.String,System.String,System.Boolean)">
            <summary>
            Tries to find the mouse tooltip option.
            </summary>
            <param name="InOption">Option to find.</param>
            <param name="InTarget">Target of the option. Defaults to null.</param>
            <param name="InbShouldForceUpdate">If true, force update the menu options before clicking. Defaults to true.</param>
            <returns>Whether or not the option was found.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.FindMouseTooltipText(System.String,System.String,System.Nullable{Vortice.Mathematics.Color},System.Nullable{Portal.GamePoint},Portal.Detect.RepeatOptions)">
            <summary>
            Tries to find the hover text.
            </summary>
            <param name="InText">Text to find.</param>
            <param name="InTextLibrary">Text library to use. Defaults to "Helpers/TextLibraries/RightClick".</param>
            <param name="InTextColor">Text color. Defaults to new Color(215, 215, 215) if null.</param>
            <param name="InMaxTooltipSize">Maximum size of the tooltip. Defaults to see (200x, 20y) if null.</param>
            <param name="InRepeatOptions">Repeat options.</param>
            <returns>Whether or not the text was found.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.MakePointOutsideRegion(Portal.GameRegion)">
            <summary>
            Makes a random point outside of the given region.
            </summary>
            <param name="InRegion">Region to make the point outside of.</param>
            <returns>Random point outside of the given region.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.WaitForLoggedIn(System.Int32,System.Int32,System.Int32)">
            <summary>
            Waits for the player to be logged in.
            </summary>
            <param name="InMaxTries">Maximum tries. Defaults to 1000.</param>
            <param name="InMinWait">Minimum random wait. Defaults to 100ms.</param>
            <param name="InMaxWait">Maximum random wait. Defaults to 300ms.</param>
        </member>
        <member name="M:OSRSHelpers.Shared.WaitForIdle(System.Int32,System.Int32,System.Int32)">
            <summary>
            Waits for the player to be idle.
            </summary>
            <param name="InMaxTries">Maximum tries. Defaults to 100.</param>
            <param name="InMinWait">Minimum random wait. Defaults to 100ms.</param>
            <param name="InMaxWait">Maximum random wait. Defaults to 300ms.</param>
        </member>
        <member name="M:OSRSHelpers.Shared.WaitForTicks(System.Int32,System.Int32)">
            <summary>
            Waits for the specified amount of game ticks.
            </summary>
            <param name="InTicks">Amount of ticks to wait for.</param>
            <param name="InTimeout">Timeout for each wait in milliseconds. Defaults to 10000ms.</param>
        </member>
        <member name="M:OSRSHelpers.Shared.AutoLoginIfLoggedOut">
            <summary>
            Logs in if the player is logged out. Will not use the username and password, only the saved logins like in OSRS.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Shared.AutoLoginIfLoggedOut(System.String,System.String)">
            <summary>
            Logs in if the player is logged out.
            </summary>
            <param name="InUsername">Username to log in with.</param>
            <param name="InPassword">Password to log in with.</param>
        </member>
        <member name="M:OSRSHelpers.Shared.GetOpenTab(System.Boolean)">
            <summary>
            Gets the open tab.
            </summary>
            <param name="InbShouldForceUpdate">If true, force update the tabs before checking. Defaults to true.</param>
            <returns>Open tab type.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.IsTabOpen(OSRSHelpers.Types.ETabType,System.Boolean)">
            <summary>
            Checks if the specified tab is open.
            </summary>
            <param name="InTab">Tab to check.</param>
            <param name="InbShouldForceUpdate">If true, force update the tabs before checking. Defaults to true.</param>
            <returns>Whether or not the tab is open.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.OpenTab(OSRSHelpers.Types.ETabType,System.Boolean)">
            <summary>
            Tries to open the specified tab.
            </summary>
            <param name="InTab">Tab to open.</param>
            <param name="InbShouldForceUpdate">If true, force update the tabs before opening. Defaults to true.</param>
            <returns>Whether or not the tab is open.</returns>
        </member>
        <member name="M:OSRSHelpers.Shared.CloseWindow(System.Nullable{Portal.GameRegion})">
            <summary>
            Tries to find the close button, and closes the window.
            </summary>
            <param name="InRegion">Region to search in. Defaults to null, which will search the entire game window.</param>
        </member>
        <member name="M:OSRSHelpers.Shared.ZoomFullyIn">
            <summary>
            Zooms all the way in.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Shared.ZoomFullyOut">
            <summary>
            Zooms all the way out.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Shared.Zoom(System.Int32)">
            <summary>
            Zooms out to the specified zoom value.
            </summary>
            <param name="InValue">Zoom value.</param>
        </member>
        <member name="M:OSRSHelpers.Shared.Zoom(System.String,System.Int32)">
            <summary>
            Zooms out to the specified zoom level ID.
            
            A zoom level ID is a string that is used to identify a specific zoom level.
            
            Will use "Default" which is 500 if the zoom level ID is not found.
            </summary>
            <param name="InID">Zoom level ID. Will use "Default" if null.</param>
            <param name="InZoomOffset">Offset to the zoom level. Defaults to 0.</param>
        </member>
        <member name="T:OSRSHelpers.Signals">
            <summary>
            Signals for OSRSHelpers.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnLogin">
            <summary>
            Signal for when logged in.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnLogout">
            <summary>
            Signal for when logged out.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnCameraChanged">
            <summary>
            Signal for when the camera changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnChatChanged">
            <summary>
            Signal for when the chat changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnCloseNPCsChanged">
            <summary>
            Signal for when the close npcs changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnCloseObjectsChanged">
            <summary>
            Signal for when the close objects changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnClosePlayersChanged">
            <summary>
            Signal for when the close remote players changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnGameChanged">
            <summary>
            Signal for when the player's status changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnNPCChanged">
            <summary>
            Signal for when an NPC is interacted with changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnSkillsChanged">
            <summary>
            Signal for when the player's skills changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnSlayerChanged">
            <summary>
            Signal for when the player's slayer changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnStatusChanged">
            <summary>
            Signal for when the player's status changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnUIChanged">
            <summary>
            Signal for when the player's ui changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnUIMenuChanged">
            <summary>
            Signal for when the player's ui menu (right click menu) changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnViewportChanged">
            <summary>
            Signal for when the viewport changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnLootChanged">
            <summary>
            Signal for when loot appears.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnBankChanged">
            <summary>
            Signal for when the bank changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnInventoryChanged">
            <summary>
            Signal for when the inventory changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnInventoryFull">
            <summary>
            Signal for when the inventory is full.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnInventoryEmpty">
            <summary>
            Signal for when the inventory is empty.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnEquipmentChanged">
            <summary>
            Signal for when the equipment changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnInventoryOrEquipmentChanged">
            <summary>
            Signal for when the inventory or equipment changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnShopChanged">
            <summary>
            Signal for when the shop changes.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnTick">
            <summary>
            Signal for when a tick happens.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnIdleChanged">
            <summary>
            Signal for when the player is idle.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Signals.OnSkillLevelUp">
            <summary>
            Signal for a skill has leveled up.
            </summary>
        </member>
        <member name="T:OSRSHelpers.Types.EHeadIcon">
            <summary>
            Overhead icons enum.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.NONE">
            <summary>
            No overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.MELEE">
            <summary>
            Melee overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.RANGED">
            <summary>
            Ranged overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.MAGIC">
            <summary>
            Magic overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.RETRIBUTION">
            <summary>
            Retribution overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.SMITE">
            <summary>
            Smite overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.REDEMPTION">
            <summary>
            Redemption overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.RANGE_MAGE">
            <summary>
            Range Mage overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.RANGE_MELEE">
            <summary>
            Range Melee overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.MAGE_MELEE">
            <summary>
            Mage Melee overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.RANGE_MAGE_MELEE">
            <summary>
            Range Mage Melee overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.WRATH">
            <summary>
            Wrath overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.SOUL_SPLIT">
            <summary>
            Soul Split overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.DEFLECT_MELEE">
            <summary>
            Deflect Melee overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.DEFLECT_RANGE">
            <summary>
            Deflect Range overhead icon.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.EHeadIcon.DEFLECT_MAGE">
            <summary>
            Deflect Mage overhead icon.
            </summary>
        </member>
        <member name="T:OSRSHelpers.Types.EChatMessageType">
            <summary>
            Chat message type enum.
            </summary>
        </member>
        <member name="T:OSRSHelpers.Types.ESkillType">
            <summary>
            Skill type enum.
            </summary>
        </member>
        <member name="T:OSRSHelpers.Types.LocalPosition">
            <summary>
            Local position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.LocalPosition.X">
            <summary>
            X position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.LocalPosition.Y">
            <summary>
            Y position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.LocalPosition.TileHeight">
            <summary>
            Tile height.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Types.LocalPosition.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="X">X position.</param>
            <param name="Y">Y position.</param>
            <param name="TileHeight">Tile height.</param>
        </member>
        <member name="M:OSRSHelpers.Types.LocalPosition.ToGamePoint">
            <summary>
            Convert to a GamePoint.
            </summary>
            <returns>The GamePoint.</returns>
        </member>
        <member name="T:OSRSHelpers.Types.WorldPosition">
            <summary>
            World position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.WorldPosition.X">
            <summary>
            X position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.WorldPosition.Y">
            <summary>
            Y position.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.WorldPosition.Plane">
            <summary>
            Plane.
            </summary>
        </member>
        <member name="M:OSRSHelpers.Types.WorldPosition.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="X">X position.</param>
            <param name="Y">Y position.</param>
            <param name="Plane">Plane.</param>
        </member>
        <member name="T:OSRSHelpers.Types.EPrayer">
            <summary>
            Prayers
            </summary>
        </member>
        <member name="T:OSRSHelpers.Types.UITab">
            <summary>
            Tab class.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.UITab.Type">
            <summary>
            Type of the tab.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.UITab.Region">
            <summary>
            Region of the tab.
            </summary>
        </member>
        <member name="P:OSRSHelpers.Types.UITab.bIsActive">
            <summary>
            Is tab active?
            </summary>
        </member>
        <member name="M:OSRSHelpers.Types.UITab.#ctor(System.Text.Json.JsonElement)">
            <summary>
            Constructor.
            </summary>
            <param name="InData">The data to set from.</param>
        </member>
        <member name="T:OSRSHelpers.Types.ETabType">
            <summary>
            The type of tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.None">
            <summary>
            No tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Combat">
            <summary>
            The combat tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Skills">
            <summary>
            The skills tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Quests">
            <summary>
            The quests tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Inventory">
            <summary>
            The inventory tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Equipment">
            <summary>
            The equipment tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Prayer">
            <summary>
            The prayer tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Magic">
            <summary>
            The magic tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.FriendsChat">
            <summary>
            The friends chat tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Friends">
            <summary>
            The friends tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Ignore">
            <summary>
            The ignore tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Logout">
            <summary>
            The logout tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Options">
            <summary>
            The options tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Emotes">
            <summary>
            The emotes tab.
            </summary>
        </member>
        <member name="F:OSRSHelpers.Types.ETabType.Music">
            <summary>
            The music tab.
            </summary>
        </member>
        <member name="T:OSRSHelpers.LoginWorker">
             <summary>
             Login worker.
            
             When no username or password is provided, it will try to use the saved login.
             </summary>
        </member>
        <member name="M:OSRSHelpers.LoginWorker.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:OSRSHelpers.LoginWorker.OnTick">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.LoginWorker.TryLogin(System.String,System.String)">
            <summary>
            Tries to login. When no username or password is provided, it will try to use the saved login.
            </summary>
            <param name="InUsername">Username to login with.</param>
            <param name="InPassword">Password to login with.</param>
        </member>
        <member name="M:OSRSHelpers.LoginWorker.TryLogout">
            <summary>
            Tries to logout.
            </summary>
            <returns>True if the logout was successful.</returns>
        </member>
        <member name="T:OSRSHelpers.PrayerFlickWorker">
            <summary>
            Prayer flicking worker.
            </summary>
        </member>
        <member name="P:OSRSHelpers.PrayerFlickWorker.bIsPrayerFlicking">
            <summary>
            Is prayer flicking enabled?
            </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.OnTick">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.StartPrayerFlicking">
             <summary>
             Starts prayer flicking.
            
             Use this function to start prayer flicking, and do NOT use <see cref="!:PrayerFlickWorker.Start"/>.
             Keep in mind that it starts paused the first time, so you need to call <see cref="!:PrayerFlickWorker.Unpause"/> as well to start it.
             </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.StopPrayerFlicking">
             <summary>
             Stops prayer flicking.
            
             Use this function to stop prayer flicking, and do NOT use <see cref="!:PrayerFlickWorker.Stop"/>.
             </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.PausePrayerFlicking">
             <summary>
             Pauses prayer flicking, will pause no matter the current state. If you want the prayer flicking to pause on the next activation, use <see cref="M:OSRSHelpers.PrayerFlickWorker.PausePrayerFlickingOnNextActive(System.Action)"/>.
            
             Calling this function is the same as calling <see cref="!:PrayerFlickWorker.Pause"/>.
             </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.PausePrayerFlickingOnNextActive(System.Action)">
            <summary>
            Pauses prayer flicking on the next activation, so that you can do something while the prayer is active.
            </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.PausePrayerFlickingOnNextInactive(System.Action)">
            <summary>
            Pauses prayer flicking on the next deactivation, so that you can do something while the prayer is inactive.
            </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.UnpausePrayerFlicking">
             <summary>
             Unpauses prayer flicking.
            
             Calling this function is the same as calling <see cref="!:PrayerFlickWorker.Unpause"/>.
             </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.WaitForPrayerFlickingToPause">
            <summary>
            Waits for the prayer flicking to pause.
            </summary>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.IsPrayerActive">
            <summary>
            Is the quick prayer button turned on?
            </summary>
            <returns>True if the quick prayer button is turned on, false otherwise.</returns>
        </member>
        <member name="M:OSRSHelpers.PrayerFlickWorker.GetPrayerActiveButton">
            <summary>
            Gets the quick prayer button while it is activated.
            </summary>
            <returns>The quick prayer button while it is activated, or null if it is not found.</returns>
        </member>
        <member name="T:OSRSHelpers.SimpleCombatWorker">
            <summary>
            Simple combat worker.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.TargetNames">
            <summary>
            List of target names to find.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.LootNames">
            <summary>
            List of item names to loot.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.FoodNames">
            <summary>
            Dictionary of items to use when the health is below the value.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.ItemsToClickOnFullInventory">
            <summary>
            List of items to click on when the inventory is full.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.ItemsToDropOnFullInventory">
            <summary>
            List of items to drop on full inventory.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.ItemsToUseOnPredicate">
            <summary>
            Dictionary of items to use when the predicate returns true, this is checked at the same time as food.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.PauseOnPredicate">
            <summary>
            List of predicates to pause combat worker if any of them return true.
            <br/><br/>
            Should be used in combination with <see cref="M:OSRSHelpers.SimpleCombatWorker.WaitForAttackingToPause"/>.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.ActionOnKill">
            <summary>
            List of actions to perform on kill.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.LootAppearDelay">
            <summary>
            Delay for loot to appear, in milliseconds. Some NPCs have a long delay before loot appears.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.bUsePrayerFlicking">
            <summary>
            Should prayer flicking be used?
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.bIsAttacking">
            <summary>
            Is the worker active?
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.CurrentTarget">
            <summary>
            Current target.
            </summary>
        </member>
        <member name="P:OSRSHelpers.SimpleCombatWorker.Status">
            <summary>
            Status of the combat worker.
            </summary>
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.OnTick">
            <inheritdoc />
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.LootIfInventoryNotFull">
            <summary>
            Tries to loot if the inventory is not full.
            </summary>
            <returns>True if execution should continue, false if it should start from the beginning.</returns>
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.StartAttacking">
            <summary>
            Starts attacking (starts combat worker). Remember to set the target names and loot names etc. Can be set via <see cref="P:OSRSHelpers.Shared.SimpleCombatWorkerInstance"/>.
            <br/><br/>
            Use this function to start combat, and do NOT use <see cref="!:SimpleCombatWorker.Start"/>.
            </summary>
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.StopAttacking">
            <summary>
            Stops attacking (stops combat worker).
            <br/><br/>
            Use this function to stop combat, and do NOT use <see cref="!:SimpleCombatWorker.Stop"/>.
            </summary>
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.PauseAttackingOnNextKill(System.Action)">
            <summary>
            Pauses combat worker on the next kill.
            </summary>
        </member>
        <member name="M:OSRSHelpers.SimpleCombatWorker.WaitForAttackingToPause">
            <summary>
            Waits for the combat worker to pause.
            </summary>
        </member>
    </members>
</doc>
